#include <iostream>
#include <algorithm>
using namespace std;

#include "solution.h"
#include<unordered_map>
#include<bits/stdc++.h>
void intersection(int *arr1, int *arr2, int n, int m) 
{
    
    //Write your code here
    vector<int> news;
    unordered_map<int, int> seen;
    for(int i=0;i<n;i++){
        if(seen[arr1[i]]>0){
            seen[arr1[i]]++;
        }else
            seen[arr1[i]]=1;
    }
    for(int i=0;i<m;i++){
        if(seen[arr2[i]]>=1){
            news.push_back(arr2[i]);
            seen[arr2[i]]--;
        }
    }
    sort(news.begin(),news.end());
    for(int i=0;i<news.size();i++){
        cout<<news[i]<<" ";
    }
}
int main()
{
	int t;
	cin >> t;
	while (t--)
	{

		int size1, size2;

		cin >> size1;
		int *input1 = new int[size1];

		for (int i = 0; i < size1; i++)
		{
			cin >> input1[i];
		}

		cin >> size2;
		int *input2 = new int[size2];

		for (int i = 0; i < size2; i++)
		{
			cin >> input2[i];
		}

		intersection(input1, input2, size1, size2);
		
		delete[] input1;
		delete[] input2;
		
		cout << endl;
	}

	return 0;
}
